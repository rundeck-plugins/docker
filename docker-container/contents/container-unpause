#!/usr/bin/env python -u

import argparse
import logging
import shlex
import sys
import os
from subprocess import Popen, PIPE

formatter = logging.Formatter()
logging.basicConfig(stream=sys.stdout, level=logging.INFO,
                    format='%(levelname)s: %(name)s: %(message)s')
log = logging.getLogger('docker-unpause')


parser = argparse.ArgumentParser(
    description='Pause all processes in the container.')
parser.add_argument('container', help='the container ID')
args = parser.parse_args()

if "RD_CONFIG_DOCKER_HOST" in os.environ:
    os.environ["DOCKER_HOST"] = os.environ["RD_CONFIG_DOCKER_HOST"]
    log.info("DOCKER_HOST set to " + os.environ["RD_CONFIG_DOCKER_HOST"])
else:
    log.debug("RD_CONFIG_DOCKER_HOST environment variable not defined.")

if "RD_CONFIG_DOCKER_CERT_PATH" in os.environ:
    os.environ["DOCKER_CERT_PATH"] = os.environ["RD_CONFIG_DOCKER_CERT_PATH"]
    log.info("DOCKER_CERT_PATH=" + os.environ["RD_CONFIG_DOCKER_CERT_PATH"])
    if "RD_CONFIG_DOCKER_TLS_VERIFY" in os.environ:
        os.environ["DOCKER_TLS_VERIFY"] = os.environ["RD_CONFIG_DOCKER_TLS_VERIFY"]
        log.info("DOCKER_TLS_VERIFY=" + os.environ["RD_CONFIG_DOCKER_TLS_VERIFY"])
    else:
        log.debug("RD_CONFIG_DOCKER_TLS_VERIFY environment variable not defined.")

p = Popen(shlex.split('docker unpause %s' % (args.container)),
          shell=False, stdout=PIPE, stderr=PIPE)
exitcode = p.wait()

log.info("Command execution stdout: '" + p.stdout.read() + "' ...")
log.info("Command execution stderr: '" + p.stderr.read() + "' ...")

if exitcode != 0:
    log.error("Command execution failed with exit code: %s" % str(exitcode))

# done
sys.exit(exitcode)
