name: "@name@"
rundeckPluginVersion: 1.2
author: "@author@"
date: "@date@"
version: "@version@"
url: "@url@"
providers:
  - name: docker-container-execute-command
    service: WorkflowNodeStep
    title: docker / container / execute
    description: 'Execute the command in an existing container'
    plugin-type: script
    script-interpreter: python -u
    script-file: node-execute
    script-args: ${config.container} ${config.user}
    config:
      - type: String
        name: container
        title: 'container'
        description: 'The container to dispatch the command'
        required: true
      - type: String
        name: command
        title: 'command'
        description: 'The command string to execute in the container'
        required: true
      - type: String
        name: user
        title: 'User'
        description: 'User to execute command as.'
        default: root
        required: false
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
      - type: String
        name: docker-cert-path
        title: 'docker-cert-path'
        description: 'The certificate path'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: String
        name: docker-host
        title: 'docker-host'
        description: 'The docker host'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: Select
        name: docker-tls-verify
        title: 'docker-tls-verify'
        description: 'Verify TLS'
        values: true,false
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
  - name: docker-container-node-executor
    service: NodeExecutor
    title: docker-container-node-executor
    description: 'Dispatch the command to an existing container'
    plugin-type: script
    script-interpreter: python -u
    script-file: node-execute
    script-args: ${node.docker:Id} ${node.username}
    config:
      - type: Select
        name: shell
        title: Shell
        description: Remote shell used to execute the command. In order to use Inline Scripts steps, this attribute is needed.This value can be overwrited on node level using docker-shell attribute
        values:
        - bash
        - sh
        scope: Instance
        renderingOptions:
           instance-scope-node-attribute: "docker-shell"
      - type: String
        name: docker-cert-path
        title: 'docker-cert-path'
        description: 'The certificate path'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: String
        name: docker-host
        title: 'docker-host'
        description: 'The docker host'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: Select
        name: docker-tls-verify
        title: 'docker-tls-verify'
        description: 'Verify TLS'
        values: true,false
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: String
        name: container
        title: 'container'
        description: 'The container to dispatch.'
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
  - name: docker-container-file-copier
    service: FileCopier
    title: docker-container-file-copier
    description: 'Dispatch script to an existing container'
    plugin-type: script
    script-interpreter: python -u
    script-file: file-copier
    script-args: ${node.docker:Id} ${file-copy.file} ${file-copy.destination}
    config:
      - type: String
        name: docker-cert-path
        title: 'docker-cert-path'
        description: 'The certificate path'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: String
        name: docker-host
        title: 'docker-host'
        description: 'The docker host'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: Select
        name: docker-tls-verify
        title: 'docker-tls-verify'
        description: 'Verify TLS'
        values: true,false
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
  - name: docker-container-model-source
    service: ResourceModelSource
    resource-format: resourcejson
    title: docker / container / model
    description: 'Read docker containers as nodes'
    plugin-type: script
    script-interpreter: python -u
    script-file: model-source
    script-args: ${config.attributes}
    config:
      - type: String
        name: docker-cert-path
        title: 'docker-cert-path'
        description: 'The certificate path'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: String
        name: docker-host
        title: 'docker-host'
        description: 'The docker host'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: Select
        name: docker-tls-verify
        title: 'docker-tls-verify'
        description: 'Verify TLS'
        values: true,false
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: String
        name: attributes
        title: 'Default attributes'
        description: 'List of key=value pairs (space separated). For example: "username=root osFamily=linux"'
      - type: String
        name: mapping
        title: 'Custom Mapping'
        description: 'Custom mapping (new line separated or comma separated), eg: nodename.selector=docker:Name,hostname.selector=docker:IPAddress. You can also add default values depending of an attribute of the docker container, for example: "docker-shell.<image:tag>.default=sh" or just "docker-shell.default=bash to apply it to all nodes"'
        renderingOptions:
          displayType: MULTI_LINE
      - type: String
        name: tags
        title: Tags
        description: 'List of tags (space separated or comma separated). You can add custom, eg: tag.selector=docker:Config.Image'
      - type: String
        name: filter
        title: Filter
        description: 'Filter the list of containers (docker ps --filter syntax), eg: name=rundeck*,status=running. Further information here: https://docs.docker.com/engine/reference/commandline/ps/'
      - type: Boolean
        name: all-containers
        title: 'All containers'
        description: 'Include all containers. If unchecked only running containers will be loaded.'
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
  - name: docker-container-inspect-workflow-step
    service: WorkflowNodeStep
    title: docker / container / inspect
    description: 'inspect the state of the container'
    plugin-type: script
    script-interpreter: python -u
    script-file: container-inspect
    script-args: ${config.container}
    config:
      - type: String
        name: container
        description: 'The container ID'
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
  - name: docker-container-pause-step
    service: WorkflowNodeStep
    title: docker / container / pause
    description: 'pause all processes within the container'
    plugin-type: script
    script-interpreter: python -u
    script-file: container-pause
    script-args: ${config.container}
    config:
      - type: String
        name: container
        description: 'The container ID'
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
  - name: docker-container-unpause-step
    service: WorkflowNodeStep
    title: docker / container / unpause
    description: 'unpause all processes within the container'
    plugin-type: script
    script-interpreter: python -u
    script-file: container-unpause
    script-args: ${config.container}
    config:
      - type: String
        name: container
        description: 'The container ID'
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
  - name: docker-container-kill-step
    service: WorkflowNodeStep
    title: docker / container / kill
    description: 'kill the running container'
    plugin-type: script
    script-interpreter: python -u
    script-file: container-kill
    script-args: ${config.container} ${container.signal}
    config:
      - type: String
        name: container
        description: 'The container ID'
      - type: String
        name: signal
        description: 'Signal to send to the container'
        default: KILL
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
  - name: docker-container-stats-step
    service: WorkflowNodeStep
    title: docker / container / stats
    description: 'Display container resource usage statistics (no-stream)'
    plugin-type: script
    script-interpreter: python -u
    script-file: container-stats
    script-args: ${config.container} ${config.format}
    config:
      - type: String
        name: container
        description: 'The container ID'
      - type: String
        name: format
        description: 'Pretty-print images using a Go template'
        default: 'table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}\t{{.BlockIO}}'
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
  - name: docker-run-workflow-step
    service: WorkflowNodeStep
    title: docker / image / run
    description: 'Run the image and execute command'
    plugin-type: script
    script-interpreter: python -u
    script-file: run-image
    script-args: ${config.image} ${config.command}
    config:
      - type: String
        name: name
        title: 'name'
        description: 'The identifying name'
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: image
        title: 'image'
        description: 'The container image identifier'
        required: true
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: env
        title: 'environment variables'
        description: 'Set of environment variables.'
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: env-file
        title: 'file with environment variables'
        description: 'Set path of file with environment variables (in the filesystem where Rundeck runs).'
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: volume
        title: 'volume'
        description: 'Bind mount a volume (from the filesystem where Docker engine runs)'
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: volumes-from
        title: 'volumes-from'
        description: 'Mount volumes from the specified container(s)'
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: publish
        title: 'publish'
        description: 'Publish a container port (eg xxxx:yyyy)'
        renderingOptions:
          groupName: 'Container'
      - type: FreeSelect
        name: pull
        title: 'pull'
        description: 'Pull image before running ("always"|"missing"|"never")'
        values: always,missing,never
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: cidfile
        title: 'cidfile'
        description: 'Write the container ID to the file'
        renderingOptions:
          groupName: 'Running'
      - type: String
        name: command
        title: 'command'
        description: 'Run this command at start up'
        renderingOptions:
          groupName: 'Running'
      - type: Select
        name: detach
        title: 'detach'
        description: 'Run container in background and print container ID'
        values: true,false
        renderingOptions:
          groupName: 'Running'
      - type: Select
        name: tty
        title: 'tty'
        description: 'Allocate a pseudo-TTY'
        values: true,false
        renderingOptions:
          groupName: 'Running'
      - type: Select
        name: interactive
        title: 'interactive'
        description: 'Keep STDIN open even if not attached'
        values: true,false
        renderingOptions:
          groupName: 'Running'
      - type: String
        name: add-host
        title: 'add-host'
        description: 'Add a line to /etc/hosts (host:IP)'
        renderingOptions:
          groupName: 'OS Config'
      - type: Integer
        name: blkio-weight
        title: 'blkio-weight'
        description: 'Block IO weight (relative weight) accepts a weight value between 10 and 1000.'
        renderingOptions:
          groupName: 'OS Config'
      - type: String
        name: cap-add
        title: 'cap-add'
        description: 'Add Linux capabilities'
        renderingOptions:
          groupName: 'OS Config'
      - type: String
        name: cap-drop
        title: 'cap-drop'
        description: 'Drop Linux capabilities'
        renderingOptions:
          groupName: 'OS Config'
      - type: Integer
        name: cpu-period
        title: 'cpu-period'
        description: 'Limit the CPU CFS (Completely Fair Scheduler) period'
        renderingOptions:
          groupName: 'Resources'
      - type: Integer
        name: cpu-quota
        title: 'cpu-quota'
        description: 'Limit the CPU CFS (Completely Fair Scheduler) quota'
        renderingOptions:
          groupName: 'Resources'
      - type: Integer
        name: cpu-shares
        title: 'cpu-shares'
        description: 'CPU shares (relative weight)'
        renderingOptions:
          groupName: 'Resources'
      - type: String
        name: cpuset-cpus
        title: 'cpuset-cpus'
        description: 'CPUs in which to allow execution (0-3, 0,1)'
        renderingOptions:
          groupName: 'Resources'
      - type: String
        name: cpuset-mems
        title: 'cpuset-mems'
        description: 'Memory nodes (MEMs) in which to allow execution (0-3, 0,1)'
        renderingOptions:
          groupName: 'Resources'
      - type: String
        name: device
        title: 'device'
        description: 'Allows you to run devices inside the container without the --privileged flag'
        renderingOptions:
          groupName: 'Running'
      - type: String
        name: dns
        title: 'dns'
        description: 'Set custom dns servers for the container'
        renderingOptions:
          groupName: 'Network'
      - type: FreeSelect
        name: ipc
        title: 'ipc'
        description: 'Set the IPC mode for the container'
        values: host,container:<name|id>
        renderingOptions:
          groupName: 'Container'
      - type: Select
        name: log-driver
        title: 'log-driver'
        description: 'Logging driver for container'
        values: none,json-file,splunk,syslog,journald
        renderingOptions:
          groupName: 'Running'
      - type: String
        name: log-opt
        title: 'log-opt'
        description: 'Log driver options'
        renderingOptions:
          groupName: 'Running'
      - type: String
        name: lxc-conf
        title: 'lxc-conf'
        description: 'Add custom lxc options'
        renderingOptions:
          groupName: 'Running'
      - type: String
        name: memory
        title: 'memory'
        description: 'Memory limit (format: <number><optional unit>, where unit = b, k, m or g)'
        renderingOptions:
          groupName: 'Resources'
      - type: String
        name: memory-swap
        title: 'memory-swap'
        description: 'Total memory limit (memory + swap, format: <number><optional unit>, where unit = b, k, m or g)'
        renderingOptions:
          groupName: 'Resources'
      - type: FreeSelect
        name: net
        title: 'net'
        description: 'Set the Network mode for the container'
        values: bridge,none,host,container:<name|id>
        renderingOptions:
          groupName: 'Network'
      - type: Select
        name: oom-kill-disable
        title: 'oom-kill-disable'
        description: 'Whether to disable OOM Killer for the container or not.'
        values: true,false
        renderingOptions:
          groupName: 'Running'
      - type: Select
        name: privileged
        title: 'privileged'
        description: 'Give extended privileges to this container'
        values: true,false
        renderingOptions:
          groupName: 'Running'
      - type: FreeSelect
        name: restart
        title: 'restart'
        description: 'Restart policy to apply when a container exits'
        values: no,always,on-failure[:max-retries]
        renderingOptions:
          groupName: 'Running'
      - type: Select
        name: rm
        title: 'rm'
        description: 'Automatically remove the container when it exits'
        values: true,false
        renderingOptions:
          groupName: 'Running'
      - type: String
        name: security-opt
        title: 'security-opt'
        description: 'Security Options'
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: read-only
        title: 'read-only'
        description: 'Mount the containers root filesystem as read only'
        renderingOptions:
          groupName: 'OS Config'
      - type: String
        name: ulimit
        title: 'ulimit'
        description: 'Ulimit options'
        renderingOptions:
          groupName: 'OS Config'
      - type: String
        name: uts
        title: 'uts'
        description: 'UTS namespace to use'
        renderingOptions:
          groupName: 'OS Config'
      - type: String
        name: label
        title: 'label'
        description: 'Set meta data on a container'
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: workdir
        title: 'working-directory'
        description: 'Working directory inside the container'
        renderingOptions:
          groupName: 'Container'
      - type: String
        name: user
        title: 'user'
        description: 'Username or UID (format: <name|uid>[:<group|gid>])'
        renderingOptions:
          groupName: 'Container'
      - type: Boolean
        name: debug
        title: Debug?
        description: 'Write debug messages to stderr'
        renderingOptions:
          groupName: 'Step Options'
      - type: String
        name: docker-cert-path
        title: 'docker-cert-path'
        description: 'The certificate path'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: String
        name: docker-host
        title: 'docker-host'
        description: 'The docker host'
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
      - type: Select
        name: docker-tls-verify
        title: 'docker-tls-verify'
        description: 'verify TLS'
        values: true,false
        renderingOptions:
          grouping: secondary
          groupName: 'API Connection'
